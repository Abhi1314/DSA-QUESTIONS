
//Merge Overlapping Intervals
import java.util.Arrays;
import java.util.Comparator;
import java.util.Stack;
public class Main
{
	public static void main(String[] args) {
        int [][]Intervals = {{1,3},{2,4},{6,8},{9,10}};
        Merge_intervals(Intervals);
	}
	public static int [][] Merge_intervals(int [][] Intervals2){
	    // if array is not sorted than sort it first.
	    Arrays.sort(Intervals2,(a,b)-> Integer.compare(a[0],b[0]));
	    Stack<int[]>stack=new Stack();
	    stack.add(Intervals2[0]);
	    
	    for(int i=1;i<Intervals2.length;i++){
	        
	        int startpoint2=Intervals2[i][0];
	        int endpoint2=Intervals2[i][1];
	        
	        int []popArray=stack.pop();
	        int startpoint1=popArray[0];
	        int endpoint1=popArray[1];
	        int endmax=Math.max(endpoint2,endpoint1);
	        if(endpoint1>=startpoint2){
	            int[]merge=new int[]{startpoint1,endmax};
	            stack.add(merge);
	        }else{
	            stack.add(popArray);
	            stack.add(Intervals2[i]);
	        }
	    }
	    int [][] output = new int[stack.size()][2];
	    for(int i=output.length-1;i>=0;i--){
	        int []popArray=stack.pop();
	        output[i][0]=popArray[0];
	        output[i][1]=popArray[1];
	    }
	    System.out.print(output);
	    return output;
	}
}
