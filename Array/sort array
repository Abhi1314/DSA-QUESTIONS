/******************************************************************************
First Approch using counter
*******************************************************************************/
public class Main
{
	public static void main(String[] args) {
	
	int arr[]={0, 1, 1, 0, 1, 2, 1, 2, 0, 0, 0, 1};
	int zerocount=0;
	int onecount=0;
	int twocount=0;
	for(int i=0;i<arr.length;i++){
	    if(arr[i]==0){
	        zerocount+=1;
	    }else if(arr[i]==1){
	        onecount+=1;
	    }else{
	        twocount+=1;
	    }
	}
	System.out.println("zerocount:"+zerocount);
	System.out.println("onecount:"+onecount);
	System.out.println("twocount:"+twocount);
	
	for(int i=0;i<zerocount;i++) arr[i]=0;
	for(int i=zerocount;i<zerocount+onecount;i++) arr[i]=1;
	for(int i=zerocount+onecount;i<zerocount+onecount+twocount;i++) arr[i]=2;
	for(int i=0;i<arr.length;i++){
	    System.out.println(arr[i]);
	}
	
	}
/******************************************************************************
Second Approch using DNF(Dutch National Flag Algorithm)
*******************************************************************************/
int low=0;
int mid=0;
int high=arr.length-1;
while(mid<=high){
    int temp=0;
    if(arr[mid]==0){
        temp=arr[mid];
        arr[mid]=arr[low];
        arr[low]=temp;
        mid++;
        low++;
        
    }
    else if(arr[mid]==1){
        mid++;
    }
    else{
        temp=arr[mid];
        arr[mid]=arr[high];
        arr[high]=temp;
        high--;
    }
}
for(int i=0;i<arr.length;i++){
    System.out.println(arr[i]);
}
}
}
